{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/yatinsatija/Desktop/e-medic-new/e-medic-frontend/src/pages/EPHARMACY/staff validation/PrescriptionCard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\nimport { firestore } from '../../../Firebase/Firebase';\nimport { useHistory } from \"react-router-dom\";\nimport Axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 305,\n    maxHeight: 390,\n    '&:hover': {\n      boxShadow: \"10px 10px 10px 0px rgba(0, 0, 0, 0.64)\",\n      marginLeft: \"-3px\",\n      marginTop: \"-2px\",\n      transitionDuration: 200\n    }\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n\n  },\n  dialog: {\n    [theme.breakpoints.up('md')]: {\n      flexDirection: 'row'\n    },\n    flexDirection: 'column',\n    display: 'flex'\n  },\n  poster: {\n    [theme.breakpoints.up('md')]: {\n      maxWidth: \"40%\"\n    },\n    width: \"100%\"\n  },\n  content: {\n    [theme.breakpoints.up('md')]: {\n      width: \"60%\"\n    },\n    width: \"100%\",\n    padding: '1%'\n  }\n}));\nexport default function PrescriptionCard(props) {\n  _s();\n\n  const history = useHistory();\n  const classes = useStyles();\n  const prefersDarkMode = localStorage.getItem('darkMode') === 'true';\n  let mobile = window.matchMedia('(max-width: 300px)').matches === 'true';\n  const [open, setOpen] = React.useState(false);\n  const [eventDialog, setEventDialog] = React.useState(false);\n  const imgLink = props.event.prescription; //   let user = localStorage.getItem('token');\n  //Shows snackbar with message and copies link in '' for user\n\n  const handleClick = () => {\n    setOpen(true);\n    console.log(imgLink);\n    navigator.clipboard.writeText(\"Copy this text to clipboard\");\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const openInNewTab = url => {\n    const newWindow = window.open(url, '_blank', 'noopener,noreferrer');\n    if (newWindow) newWindow.opener = null;\n  };\n\n  const validateOrder = oid => {\n    Axios.post(\"http://localhost:3001/validate\", {\n      oid: oid\n    }).then(res => console.log(res));\n    Axios.post(\"http://localhost:3001/bill\", {\n      billId: Math.floor(Math.random() * 1000),\n      oid: oid\n    }).then(res => console.log(res));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      onDoubleClick: () => setEventDialog(true),\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        backgroundColor: prefersDarkMode ? \"#717171\" : \"azure\",\n        cursor: \"pointer\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: props.event.oid //   subheader={props.event.date}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"p\",\n          children: \"Prescription\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        disableSpacing: true,\n        style: {\n          marginTop: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          onClick: () => setEventDialog(true),\n          children: \"Read More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: Boolean(eventDialog),\n      onClose: () => setEventDialog(false),\n      scroll: \"body\",\n      variant: \"fade\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: props.event.oid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.dialog,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: props.event.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            validateOrder(props.event.oid);\n          },\n          children: \"Validate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            openInNewTab(props.event.prescription);\n          },\n          children: \"Open Prescription Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setEventDialog(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PrescriptionCard, \"YqaIB6qPm5RUfRlHqRViCUfawf0=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = PrescriptionCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrescriptionCard\");","map":{"version":3,"sources":["/Users/yatinsatija/Desktop/e-medic-new/e-medic-frontend/src/pages/EPHARMACY/staff validation/PrescriptionCard.js"],"names":["React","makeStyles","Card","CardHeader","CardContent","CardActions","Typography","Button","Dialog","DialogTitle","DialogContent","DialogActions","firestore","useHistory","Axios","useStyles","theme","root","maxWidth","maxHeight","boxShadow","marginLeft","marginTop","transitionDuration","media","height","paddingTop","dialog","breakpoints","up","flexDirection","display","poster","width","content","padding","PrescriptionCard","props","history","classes","prefersDarkMode","localStorage","getItem","mobile","window","matchMedia","matches","open","setOpen","useState","eventDialog","setEventDialog","imgLink","event","prescription","handleClick","console","log","navigator","clipboard","writeText","handleClose","reason","openInNewTab","url","newWindow","opener","validateOrder","oid","post","then","res","billId","Math","floor","random","backgroundColor","cursor","Boolean"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\nimport {firestore } from '../../../Firebase/Firebase';\nimport { useHistory } from \"react-router-dom\";\nimport Axios from 'axios';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 305,\n    maxHeight: 390,\n    '&:hover': {\n      boxShadow: \"10px 10px 10px 0px rgba(0, 0, 0, 0.64)\",\n      marginLeft: \"-3px\",\n      marginTop: \"-2px\",\n      transitionDuration: 200\n    },\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n  },\n  dialog: {\n    [theme.breakpoints.up('md')]: {\n      flexDirection: 'row',\n    },\n    flexDirection: 'column',\n    display: 'flex',\n  },\n  poster: {\n    [theme.breakpoints.up('md')]: {\n      maxWidth: \"40%\",\n    },\n    width: \"100%\",\n  },\n  content: {\n    [theme.breakpoints.up('md')]: {\n      width: \"60%\",\n    },\n    width: \"100%\",\n    padding: '1%',\n  },\n}));\n\n\nexport default function PrescriptionCard(props) {\n  const history = useHistory();\n  const classes = useStyles();\n  const prefersDarkMode = localStorage.getItem('darkMode') === 'true';\n  let mobile = window.matchMedia('(max-width: 300px)').matches === 'true';\n  const [open, setOpen] = React.useState(false);\n  const [eventDialog, setEventDialog] = React.useState(false);\n  const imgLink = props.event.prescription;\n//   let user = localStorage.getItem('token');\n\n  //Shows snackbar with message and copies link in '' for user\n  const handleClick = () => {\n    setOpen(true);\n    console.log(imgLink)\n    navigator.clipboard.writeText(\"Copy this text to clipboard\");\n  };\n  \n\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const openInNewTab = (url) => {\n    const newWindow = window.open(url, '_blank', 'noopener,noreferrer')\n    if (newWindow) newWindow.opener = null\n}\n\n  const validateOrder = (oid) => {\n    Axios.post(\"http://localhost:3001/validate\", {\n      oid: oid\n    }).then((res)=>console.log(res));\n\n    Axios.post(\"http://localhost:3001/bill\", {\n      billId: Math.floor(Math.random()*1000),\n      oid: oid\n    }).then((res)=>console.log(res));\n  }\n\n  return (\n    <div>\n      <Card className={classes.root} onDoubleClick={() => setEventDialog(true)} style={{ display: \"flex\", flexDirection: \"column\", backgroundColor: (prefersDarkMode) ? \"#717171\" : \"azure\", cursor: \"pointer\" }}>\n        <CardHeader\n          title={props.event.oid}\n        //   subheader={props.event.date}\n        />\n        {/* <CardMedia\n          className={classes.media}\n          image=\"/images/Logo.jpg\"\n          title=\"Paella dish\"\n        /> */}\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Prescription\n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing style={{ marginTop: \"auto\" }}>\n          <Button size=\"small\" onClick={() => setEventDialog(true)}>Read More</Button>\n        </CardActions>\n      </Card>\n\n      {/* Dialog for each event*/}\n      <Dialog\n        open={Boolean(eventDialog)}\n        onClose={() => setEventDialog(false)}\n        scroll=\"body\"\n        variant=\"fade\"\n      >\n        <DialogTitle>\n          {props.event.oid}\n        </DialogTitle>\n        <DialogContent>\n          <div className={classes.dialog}>\n            <div>\n              {props.event.content}\n            </div>\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => {validateOrder(props.event.oid)}}>Validate</Button>\n          <Button onClick={() => {openInNewTab(props.event.prescription)}}>Open Prescription Image</Button>\n          <Button onClick={() => setEventDialog(false)}>Close</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}