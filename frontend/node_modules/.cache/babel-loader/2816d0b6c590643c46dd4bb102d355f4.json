{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yatinsatija/Desktop/e-medic-new/e-medic-frontend/src/pages/EPHARMACY/staff validation/UpdateMedicine.js\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport { Link, useHistory } from \"react-router-dom\";\nexport default class UpdateMedicine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      medicines: [],\n      hash: {}\n    };\n  }\n\n  async componentWillMount() {\n    await Axios.get(\"http://localhost:3001/medicines\").then(response => {\n      console.log(response);\n      this.setState({\n        medicines: response.data\n      });\n    });\n  }\n\n  negateOrder(val, availstatus) {\n    console.log(val);\n    Axios.post(\"http://localhost:3001/negateorder\", {\n      mid: val,\n      isavail: availstatus\n    }).then(res => {\n      if (res.data === 'success') {\n        alert(\"Medicine Stock status changed\");\n        window.location.reload();\n      } else alert(\"Error\");\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Medicine Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), this.state.medicines.map((val, key) => {\n          // console.log(this.state.hash)\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.mname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.isavail === 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.negateOrder(val.mid, val.isavail),\n                children: \"Set Unavailable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 54\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.negateOrder(val.mid, val.isavail),\n                children: \"Set Available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 139\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/yatinsatija/Desktop/e-medic-new/e-medic-frontend/src/pages/EPHARMACY/staff validation/UpdateMedicine.js"],"names":["React","Component","Axios","Link","useHistory","UpdateMedicine","constructor","props","state","medicines","hash","componentWillMount","get","then","response","console","log","setState","data","negateOrder","val","availstatus","post","mid","isavail","res","alert","window","location","reload","render","width","map","key","mname"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AAEA,eAAe,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AAClDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIH;;AACD,QAAMC,kBAAN,GAA2B;AACvB,UAAMT,KAAK,CAACU,GAAN,CAAU,iCAAV,EACCC,IADD,CACOC,QAAD,IAAc;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACF,WAAKG,QAAL,CAAc;AACVR,QAAAA,SAAS,EAAEK,QAAQ,CAACI;AADV,OAAd;AAGC,KANH,CAAN;AAOH;;AAEDC,EAAAA,WAAW,CAACC,GAAD,EAAKC,WAAL,EAAkB;AACzBN,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACAlB,IAAAA,KAAK,CAACoB,IAAN,CAAW,mCAAX,EAAgD;AAC5CC,MAAAA,GAAG,EAAEH,GADuC;AAE5CI,MAAAA,OAAO,EAAEH;AAFmC,KAAhD,EAGGR,IAHH,CAGSY,GAAD,IAAS;AACb,UAAGA,GAAG,CAACP,IAAJ,KAAW,SAAd,EAAwB;AACpBQ,QAAAA,KAAK,CAAC,+BAAD,CAAL;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,OAHD,MAKIH,KAAK,CAAC,OAAD,CAAL;AACP,KAVD;AAYH;;AAGDI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI;AAAO,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAd;AAAA,gCACI;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,EAIK,KAAKvB,KAAL,CAAWC,SAAX,CAAqBuB,GAArB,CAAyB,CAACZ,GAAD,EAAMa,GAAN,KAAc;AACpC;AACA,8BACI;AAAA,oCACI;AAAA,wBAAKb,GAAG,CAACc;AAAT;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBACKd,GAAG,CAACI,OAAJ,KAAc,CAAd,gBAAgB;AAAQ,gBAAA,OAAO,EAAE,MAAI,KAAKL,WAAL,CAAiBC,GAAG,CAACG,GAArB,EAAyBH,GAAG,CAACI,OAA7B,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAhB,gBAAqG;AAAQ,gBAAA,OAAO,EAAE,MAAI,KAAKL,WAAL,CAAiBC,GAAG,CAACG,GAArB,EAAyBH,GAAG,CAACI,OAA7B,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAD1G;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAQH,SAVA,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAqBH;;AAzDiD","sourcesContent":["import React, { Component } from 'react';\nimport Axios from 'axios';\nimport { Link, useHistory } from \"react-router-dom\";\n\nexport default class UpdateMedicine extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            medicines: [],\n            hash: {}\n        }\n    };\n    async componentWillMount() {\n        await Axios.get(\"http://localhost:3001/medicines\")\n              .then((response) => {\n                  console.log(response)\n                this.setState({\n                    medicines: response.data\n                    })\n                });\n    }\n\n    negateOrder(val,availstatus) {\n        console.log(val)\n        Axios.post(\"http://localhost:3001/negateorder\", {\n            mid: val,\n            isavail: availstatus \n        }).then((res) => {\n            if(res.data==='success'){\n                alert(\"Medicine Stock status changed\");\n                window.location.reload()\n            }\n            else\n                alert(\"Error\")\n        }\n        );\n    }\n\n\n    render() {\n        return (\n            <div>\n                <table style={{ width: \"100%\" }}>\n                    <tr>\n                        <td>Medicine Name</td>\n                    </tr>\n                    {this.state.medicines.map((val, key) => {\n                        // console.log(this.state.hash)\n                        return (\n                            <tr>\n                                <td>{val.mname}</td>\n                                <td>\n                                    {val.isavail===1?<button onClick={()=>this.negateOrder(val.mid,val.isavail)}>Set Unavailable</button>:<button onClick={()=>this.negateOrder(val.mid,val.isavail)}>Set Available</button>}\n                                </td>\n                            </tr>\n                        )\n                    })}\n\n                </table>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}